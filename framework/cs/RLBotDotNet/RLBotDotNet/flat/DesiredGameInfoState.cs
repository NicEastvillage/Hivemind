// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rlbot.flat
{

using global::System;
using global::FlatBuffers;

public struct DesiredGameInfoState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DesiredGameInfoState GetRootAsDesiredGameInfoState(ByteBuffer _bb) { return GetRootAsDesiredGameInfoState(_bb, new DesiredGameInfoState()); }
  public static DesiredGameInfoState GetRootAsDesiredGameInfoState(ByteBuffer _bb, DesiredGameInfoState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DesiredGameInfoState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Float? WorldGravityZ { get { int o = __p.__offset(4); return o != 0 ? (Float?)(new Float()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Float? GameSpeed { get { int o = __p.__offset(6); return o != 0 ? (Float?)(new Float()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Bool? Paused { get { int o = __p.__offset(8); return o != 0 ? (Bool?)(new Bool()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Bool? EndMatch { get { int o = __p.__offset(10); return o != 0 ? (Bool?)(new Bool()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartDesiredGameInfoState(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddWorldGravityZ(FlatBufferBuilder builder, Offset<Float> worldGravityZOffset) { builder.AddStruct(0, worldGravityZOffset.Value, 0); }
  public static void AddGameSpeed(FlatBufferBuilder builder, Offset<Float> gameSpeedOffset) { builder.AddStruct(1, gameSpeedOffset.Value, 0); }
  public static void AddPaused(FlatBufferBuilder builder, Offset<Bool> pausedOffset) { builder.AddStruct(2, pausedOffset.Value, 0); }
  public static void AddEndMatch(FlatBufferBuilder builder, Offset<Bool> endMatchOffset) { builder.AddStruct(3, endMatchOffset.Value, 0); }
  public static Offset<DesiredGameInfoState> EndDesiredGameInfoState(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DesiredGameInfoState>(o);
  }
};


}
